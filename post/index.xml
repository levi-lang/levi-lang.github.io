<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Minimal</title>
    <link>https://levi-lang.github.io/post/</link>
    <description>Recent content in Posts on Minimal</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 18 Jul 2022 04:39:11 +0100</lastBuildDate><atom:link href="https://levi-lang.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>kubesphere 监控: prometheus</title>
      <link>https://levi-lang.github.io/post/prometheus/</link>
      <pubDate>Mon, 18 Jul 2022 04:39:11 +0100</pubDate>
      
      <guid>https://levi-lang.github.io/post/prometheus/</guid>
      <description>kubesphere 监控 kubesphere监控系统 安装好kubesphere就生成 kubesphere 事件系统 需要在kubesphere中开启 kubesphere 告警系统 需要在kubesphere中开启 kubesphere 审计日志 需要在kubesphere中开启 HPA 同样需要在kubesphere中开启 Prometheus 的告警分为两部分。 Prometheus 服务器根据告警规则向 Alertmanager 发送告警 从 3.0 版本开始，KubeSphere 向 Prometheus 添加了开源社区中流行的告警规则，用作内置告警规则。 默认情况下，KubeSphere 3.3.0 中的 Prometheus 会持续评估这些内置告警规则，然后向 Alertmanager 发送告警 Alertmanager 可用于管理 Prometheus 以外来源发出的告警。 在 3.0 版及更高版本的 KubeSphere 中 用户可以用它管理由 Kubernetes 事件触发的告警。 所以告警涉及到事件系统 在 3.0 版及更高版本的 KubeSphere 中 用户还可以使用 Alertmanager 管理由 Kubernetes 或 KubeSphere 审计事件触发的告警 所以告警设计到审计日志 一般来说，要接收 Alertmanager 告警的通知 用户需要手动编辑 Alertmanager 的配置文件，配置接收器（例如电子邮件和 Slack）的设置。 这对 Kubernetes 用户来说并不方便，并且违背了 KubeSphere 的多租户规则/架构。 具体来说，由不同命名空间中的工作负载所触发的告警可能会发送至同一个租户，然而这些告警信息本应发给不同的租户。 为了使用 Alertmanager 管理平台上的告警 KubeSphere 提供了 Notification Manager 它是一个 Kubernetes 原生通知管理工具，完全开源。 它符合多租户规则，提供用户友好的 Kubernetes 通知体验 3.</description>
    </item>
    
    <item>
      <title>kubernetes 部署ingress: nginx</title>
      <link>https://levi-lang.github.io/post/ingress/</link>
      <pubDate>Sun, 17 Jul 2022 10:31:11 +0100</pubDate>
      
      <guid>https://levi-lang.github.io/post/ingress/</guid>
      <description>kubernetes ingress Kubernetes Ingress 只是 Kubernetes 中的一个普通资源对象 需要一个对应的 Ingress Controller 来解析 Ingress 的规则，暴露服务到外部 比如 ingress-nginx，本质上来说它只是一个 Nginx Pod 然后将请求重定向到其他内部（ClusterIP）服务去 这个 Pod 本身也是通过 Kubernetes 服务暴露出去，最常见的方式是通过 LoadBalancer 来实现的 ingress 种类 kubernetes Ingress Controller: # Kubernetes 的“官方”控制器 nginx-ingress: # 这是 NGINX 公司开发的官方产品，它也有一个基于 NGINX Plus 的商业版 traefik: # 最初，这个代理是为微服务请求及其动态环境的路由而创建的，因此具有许多有用的功能 apisix: # apisix-ingress-controller 是另一个使用Apache APISIX作为高性能反向代理 Kong Ingress: # Kong Ingress 由 Kong Inc 开发，有两个版本：商业版和免费版 HAProxy Ingress: # HAProxy 是众所周知的代理服务器和负载均衡器 Voyager: # Voyager 基于 HAProxy，并作为一个通用的解决方案提供给大量供应商 Contour: # Contour 和 Envoy 由同一个作者开发，它基于Envoy Istio Ingress # Istio 是 IBM、Google 和 Lyft 的联合开发项目，它是一个全面的服务网格解决方案 Ambassador: # Ambassador 也是一个基于 Envoy 的解决方案，它有免费版和商业版两个版本 Gloo: # Gloo 是在 Envoy 之上构建的新软件 于2018年3月发布 kubernetes 中的服务暴露方式 待补充 安装nginx-ingress 1 首先登录kubesphere 2 创建企业空间 平台管理---访问控制---创建 3 进入企业空间---应用管理---应用仓库---添加 4 名称: nginx URL: https://kubernetes.</description>
    </item>
    
    <item>
      <title>blog 搭建: hugo</title>
      <link>https://levi-lang.github.io/post/blog/</link>
      <pubDate>Sun, 17 Jul 2022 08:14:11 +1000</pubDate>
      
      <guid>https://levi-lang.github.io/post/blog/</guid>
      <description>参考地址 hugo主题: https://themes.gohugo.io/ minimal: https://themes.gohugo.io/themes/minimal/ 安装hugo Mac 安装Hugo brew install hugo 创建blog hugo new site blog cd blog 下载主题 git submodule add https://github.com/calintat/minimal.git themes/minimal git submodule init git submodule update git submodule update --remote themes/minimal cp themes/minimal/exampleSite/config.toml . 编辑文章 mkdir -p blog/content/post cd blog/content/post vim blog.md 启动测试 cd blog hugo server 生成blog cd blog hugo --theme=Minimal --baseUrl=&amp;#34;https://levi-lang.github.io&amp;#34; --buildDrafts 执行完上面的命令 会在blog 目录下的public文件夹中生成网页 上传github cd blog/public git init git add . git commit -m &amp;#34;test&amp;#34; git remote add origin https://github.</description>
    </item>
    
    <item>
      <title>kubernetes 部署工具: kubekey</title>
      <link>https://levi-lang.github.io/post/kubekey/</link>
      <pubDate>Sat, 16 Jul 2022 03:46:11 +0100</pubDate>
      
      <guid>https://levi-lang.github.io/post/kubekey/</guid>
      <description>kubernetes 安装的方式 二进制 minikube kind kubeadm kubespray sealos kubeasz kubekey KOPS k3s rancher 每台机器必须要安装 yum install socat ipvsadm conntrack -y systemctl stop postfix &amp;amp;&amp;amp; systemctl disable postfix systemctl stop firewalld &amp;amp;&amp;amp; systemctl disable firewalld setenforce 0 &amp;amp;&amp;amp; sed -i &amp;#39;s/^SELINUX=.*/SELINUX=disabled/&amp;#39; /etc/selinux/config curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun vim /etc/docker/daemon.json { &amp;#34;log-driver&amp;#34;:&amp;#34;json-file&amp;#34;, &amp;#34;log-opts&amp;#34;: {&amp;#34;max-size&amp;#34;:&amp;#34;9G&amp;#34;, &amp;#34;max-file&amp;#34;:&amp;#34;3&amp;#34;}, &amp;#34;registry-mirrors&amp;#34;: [&amp;#34;https://7a1tnjfc.mirror.aliyuncs.com&amp;#34;], &amp;#34;data-root&amp;#34;:&amp;#34;/data/docker&amp;#34;, &amp;#34;dns&amp;#34; : [&amp;#34;114.114.114.114&amp;#34;,&amp;#34;8.8.8.8&amp;#34;] } systemctl daemon-reload &amp;amp;&amp;amp; systemctl restart docker &amp;amp;&amp;amp; systemctl enable docker 使用kubekey 安装 参考地址: github: https://github.</description>
    </item>
    
  </channel>
</rss>
